{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"series",
				"seriesArray"
			],
			[
				"ChartC",
				"ChartClass"
			],
			[
				"padding",
				"paddingDiff"
			],
			[
				"Typolo",
				"TypologySchema"
			],
			[
				"Para",
				"ParametersSchema"
			],
			[
				"Reports",
				"Reports"
			],
			[
				"Sche",
				"SchemaUtils"
			],
			[
				"inten",
				"intensityField"
			],
			[
				"geom",
				"geometries"
			],
			[
				"geom_",
				"geom_3d"
			],
			[
				"_re",
				"_render2dGeometry"
			],
			[
				"GJ",
				"GJyearOccupan"
			],
			[
				"gj",
				"GJyear"
			],
			[
				"thermal",
				"thermal_cool"
			],
			[
				"therm",
				"thermal_heat"
			],
			[
				"background-s",
				"background-position"
			],
			[
				"entityTy",
				"entityTypologyClass"
			],
			[
				"co",
				"console"
			],
			[
				"inp",
				"inputValue"
			],
			[
				"common",
				"commonValue"
			],
			[
				"result",
				"results"
			],
			[
				"getPara",
				"getParameterValue"
			],
			[
				"getheig",
				"getHeightMaxInput"
			],
			[
				"height",
				"heightMin"
			],
			[
				"allow",
				"allowNonDevelopment"
			],
			[
				"is",
				"isForDevelopment"
			],
			[
				"ty",
				"typologyId"
			],
			[
				"fpa",
				"fpaGte"
			],
			[
				"fpa_",
				"fpa_lte"
			],
			[
				"getFpa",
				"getFpaGteInput"
			],
			[
				"refresh",
				"refreshReport"
			],
			[
				"param",
				"parameters"
			],
			[
				"typ",
				"typology"
			],
			[
				"sani",
				"sanitizeAzimuth"
			],
			[
				"subclas",
				"subclass"
			],
			[
				"Pat",
				"Pathway"
			],
			[
				"s",
				"swi	Switch"
			],
			[
				"auto",
				"autoAlign"
			],
			[
				"align",
				"autoAlign"
			],
			[
				"po",
				"polygons"
			],
			[
				"typology",
				"typology"
			],
			[
				"alignment",
				"alignmentButton"
			],
			[
				"orig",
				"origStyle"
			],
			[
				"diff",
				"diffPolygon"
			],
			[
				"insert",
				"insertDf"
			],
			[
				"subdiv",
				"subdividedPolygons"
			],
			[
				"subdi",
				"subdividedMap"
			],
			[
				"pl",
				"polygons"
			],
			[
				"globa",
				"globalizePoints"
			],
			[
				"sub",
				"subdivideButton"
			],
			[
				"local",
				"localizePoints"
			],
			[
				"i_co2_emb_in",
				"i_co2_emb_intensity_value"
			],
			[
				"BUi",
				"BuildingClasses"
			],
			[
				"itmed",
				"itemId"
			],
			[
				"vkt_s",
				"vkt_dwellings_day"
			],
			[
				"vkt_hous",
				"vkt_household_day"
			],
			[
				"med",
				"med_rise_with_lifts"
			],
			[
				"low_r",
				"low_rise_without_lifts"
			],
			[
				"multi",
				"multi_storey"
			],
			[
				"InstU",
				"INSTITUTIONAL"
			],
			[
				"MixED",
				"MIXED_USE"
			],
			[
				"pram",
				"paramSchema"
			],
			[
				"mode_share_",
				"mode_share_car_passenger"
			],
			[
				"total",
				"totalvehs"
			],
			[
				"dist",
				"distctr"
			],
			[
				"getBuild",
				"getBuildTypeSelect"
			],
			[
				"opera",
				"operating_carbon"
			],
			[
				"kg",
				"kgco2"
			],
			[
				"fidnby",
				"findByClass"
			],
			[
				"vkt_",
				"vkt_household"
			],
			[
				"refre",
				"refreshReport"
			],
			[
				"current",
				"currentReportId"
			],
			[
				"buildQua",
				"buildQuality"
			],
			[
				"typolo",
				"typologyClass"
			],
			[
				"findBy",
				"findByEntity"
			],
			[
				"enti",
				"entityDisplayMode"
			],
			[
				"Trans",
				"TransportCoefficients"
			],
			[
				"TRans",
				"TransportCoefficients"
			],
			[
				"Shop",
				"Shopping"
			],
			[
				"Comer",
				"CommercialSubclasses"
			],
			[
				"kl",
				"kLm2year"
			],
			[
				"co2_op",
				"co2_op_g"
			],
			[
				"en_use",
				"en_use_g"
			],
			[
				"KWH",
				"KWH_TO_MJ"
			],
			[
				"KW",
				"KWH_TO_MJ"
			],
			[
				"energy",
				"energy_demand"
			],
			[
				"units",
				"Units"
			],
			[
				"energ",
				"energy_demand"
			],
			[
				"MJ",
				"MJ"
			],
			[
				"m2",
				"m2vehicle"
			],
			[
				"enegr",
				"energy_demand"
			],
			[
				"calcEnergy",
				"calcEnergyCost"
			],
			[
				"getClass",
				"getTypologyClass"
			],
			[
				"getTyp",
				"getTypologyClass"
			],
			[
				"getSel",
				"getSelectedTypology"
			],
			[
				"Bicyc",
				"BicyclePathMaterialTypes"
			],
			[
				"bicycle",
				"BicyclePathMaterialTypes"
			],
			[
				"bic",
				"bicycle_paths"
			],
			[
				"pat",
				"pathways"
			],
			[
				"Footpath",
				"FootpathMaterialTypes"
			],
			[
				"embode",
				"embodied_carbon"
			],
			[
				"path",
				"pathway"
			],
			[
				"fie",
				"fieldName"
			],
			[
				"validate",
				"validateTypology"
			],
			[
				"typol",
				"typology"
			],
			[
				"inlin",
				"inline-block"
			],
			[
				"mergeTypol",
				"mergeTypologyObj"
			],
			[
				"full",
				"fullDoc"
			],
			[
				"mergeT",
				"mergeTypologyObj"
			],
			[
				"typo",
				"typology"
			],
			[
				"visible",
				"visibleBeforeChanges"
			],
			[
				"getSubcals",
				"getSubclassSelect"
			],
			[
				"REsidential",
				"ResidentialSubclasses"
			],
			[
				"hir",
				"highrise_std"
			],
			[
				"walk",
				"walkup_std"
			],
			[
				"getinput",
				"getAzimuthInput"
			],
			[
				"attached_",
				"attached_house_std"
			],
			[
				"Typologyb",
				"TypologyBuildQualityMap"
			],
			[
				"_render",
				"_renderQueue"
			],
			[
				"Project",
				"ProjectsController"
			],
			[
				"paa",
				"parameters"
			],
			[
				"Atlas",
				"AtlasManager"
			],
			[
				"findby",
				"findByTypology"
			],
			[
				"cateog",
				"categories"
			],
			[
				"cate",
				"category"
			],
			[
				"forEach",
				"forEachCategoryField"
			],
			[
				"or",
				"orientation"
			],
			[
				"azimu",
				"azimuthArray"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/meteor/chart.html",
			"settings":
			{
				"buffer_size": 113,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 13 files for \"resize\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/Vega.coffee:\n    5    # @param {jQuery|HTMLElement} el - The HTML element to render the chart in.\n    6    # @param {Object} [options]\n    7:   # @param {Boolean} [options.resize=false] - Whether to resize the chart based on the dimensions of\n    8    # the given HTML element. This overrides the height and width set in the spec.\n    9    # @returns {Promise}\n   10    render: (spec, el, options) ->\n   11      options = _.extend({\n   12:       resize: false\n   13      }, options)\n   14      df = Q.defer()\n   ..\n   16      @getSpec(spec).then(\n   17        (spec) ->\n   18:         if options.resize\n   19            padding = _.extend({top: 0, bottom: left: 0, right: 0}, spec.padding)\n   20            spec.width = $el.width() - padding.left - padding.right\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/meteor/chart.coffee:\n   13    delete @data.settings\n   14    args = _.extend({\n   15:     resize: true\n   16    }, settings, @data)\n   17    \n   ..\n   23      throw new Error('Chart type not recognised: ' + type)\n   24  \n   25:   if $container.length > 0 || !args.resize\n   26      width = $container.width()\n   27      height = $container.height()\n\n6 matches across 2 files\n\n\nSearching 13 files for \"400\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/Chart.coffee:\n   20    generateSpec: (args) ->\n   21      args = _.extend({\n   22:       width: 400\n   23:       height: 400\n   24        paddingForbody: 16\n   25        labels: true\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/LineChart.coffee:\n    3    generateSpec: (args) ->\n    4      args = _.extend({\n    5:       width: 400\n    6:       height: 400\n    7        # paddingForbody: 16\n    8      }, args)\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/PieChart.coffee:\n   52    generateSpec: (args) ->\n   53      args = _.extend({\n   54:       width: 400\n   55:       height: 400\n   56        paddingForbody: 16\n   57        labels: true\n\n6 matches across 3 files\n\n\nSearching 13 files for \"resize\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/Vega.coffee:\n    5    # @param {jQuery|HTMLElement} el - The HTML element to render the chart in.\n    6    # @param {Object} [options]\n    7:   # @param {Boolean} [options.resize=false] - Whether to resize the chart based on the dimensions of\n    8    # the given HTML element. This overrides the height and width set in the spec.\n    9    # @returns {Promise}\n   10    render: (spec, el, options) ->\n   11      options = _.extend({\n   12:       resize: false\n   13      }, options)\n   14      df = Q.defer()\n   ..\n   16      @getSpec(spec).then(\n   17        (spec) ->\n   18:         if options.resize\n   19            padding = _.extend({top: 0, bottom: left: 0, right: 0}, spec.padding)\n   20            spec.width = $el.width() - padding.left - padding.right\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/meteor/chart.coffee:\n   13    delete @data.settings\n   14    args = _.extend({\n   15:     resize: true\n   16:     resizeContainer: false\n   17    }, settings, @data)\n   18    \n   ..\n   29    $container.toggle(chart.items.length != 0)\n   30  \n   31:   if args.resizeContainer\n   32      chart.renderPromise.then ->\n   33        $canvas = $('canvas', $chart)\n\n7 matches across 2 files\n\n\nSearching 13 files for \"new chart\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/meteor/chart.coffee:\n   24      throw new Error('Chart type not recognised: ' + type)\n   25    \n   26:   chart = new ChartClass(args)\n   27    $chart = chart.getElement()\n   28    $container.append($chart)\n\n1 match in 1 file\n\n\nSearching 13 files for \".formatter\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/PieChart.coffee:\n    3    render: (args) ->\n    4      vegaDf = super(args)\n    5:     Q.all([vegaDf, args.formatter]).then (results) =>\n    6        [vegaResult, formatter] = results\n    7        view = vegaResult.view\n\n1 match in 1 file\n\n\nSearching 13 files for \"render:\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/Vega.coffee:\n    8    # the given HTML element. This overrides the height and width set in the spec.\n    9    # @returns {Promise}\n   10:   render: (spec, el, options) ->\n   11      options = _.extend({\n   12        resize: false\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/Chart.coffee:\n   14      @addColors(@items, args.colors ? @DEFAULT_COLORS)\n   15  \n   16:   render: (args) ->\n   17      _.extend(@options, args)\n   18      spec = @generateSpec(_.extend(@options, {values: @items}))\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/PieChart.coffee:\n    1  class PieChart extends Chart\n    2  \n    3:   render: (args) ->\n    4      vegaDf = super(args)\n    5      Q.all([vegaDf, args.formatter]).then (results) =>\n\n3 matches across 3 files\n\n\nSearching 13 files for \"{top: 0, bottom: left:\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/Vega.coffee:\n   17        (spec) ->\n   18          if options.resize\n   19:           padding = _.extend({top: 0, bottom: left: 0, right: 0}, spec.padding)\n   20            spec.width = $el.width() - padding.left - padding.right\n   21            spec.height = $el.height() - padding.top - padding.bottom\n\n1 match in 1 file\n\n\nSearching 13 files for \"widht:\"\n\n0 matches across 0 files\n\n\nSearching 13 files for \"width:\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/chart.less:\n   16    border: 1px solid #ddd;\n   17    font: 12px Arial, Helvetica;\n   18:   max-width: 180px;\n   19    max-height: 100px;\n   20    .title {\n   ..\n   22      margin-bottom: 5px;\n   23      float: left;\n   24:     width: 100%;\n   25      .percentage {\n   26        margin-left: 4px;\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/LineChart.coffee:\n    3    generateSpec: (args) ->\n    4      args = _.extend({\n    5:       width: 400\n    6        height: 400\n    7        # paddingForbody: 16\n    .\n   13      labels = args.labels\n   14      _.extend({\n   15:       width: width,\n   16        height: height,\n   17        data: [\n   ..\n   62                    y: {scale: 'y', field: 'data.y'},\n   63                    stroke: {scale: 'color', field: 'data.label'},\n   64:                   strokeWidth: {value: 2}\n   65                  }\n   66                }\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/PieChart.coffee:\n   53    generateSpec: (args) ->\n   54      args = _.extend({\n   55:       width: 400\n   56        height: 400\n   57        paddingForbody: 16\n   ..\n   64      radius = args.radius ? Math.min(height, width) / 2 - paddingForbody\n   65      spec = _.extend({\n   66:       width: width,\n   67        height: height,\n   68        data: [\n\n7 matches across 3 files\n\n\nSearching 13 files for \"generateSpec:\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/Chart.coffee:\n   26    #      dimensions of the given HTML element. If an object is provided, it can contain \"height\" and\n   27    #      \"width\" components. This overrides any height or width values in the spec.\n   28:   generateSpec: (spec) ->\n   29      _.extend({\n   30        width: 400\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/LineChart.coffee:\n    1  class LineChart extends Chart\n    2  \n    3:   generateSpec: (args) ->\n    4      args = super(args)\n    5      values = args.values\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/PieChart.coffee:\n   51      @createPopupElement(title: title, body: body)\n   52  \n   53:   generateSpec: (args) ->\n   54      args = super(args)\n   55      _.extend({\n\n3 matches across 3 files\n\n\nSearching 13 files for \"$el\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/Chart.coffee:\n   39        padding = _.extend({top: 0, bottom: 0, left: 0, right: 0}, spec.padding)\n   40        if resize.width\n   41:         spec.width = $el.width() - padding.left - padding.right\n   42        if resize.height\n   43:         spec.height = $el.height() - padding.top - padding.bottom\n   44      spec\n   45  \n\n2 matches in 1 file\n\n\nSearching 13 files for \"generateUniqueColors\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/Chart.coffee:\n   59  \n   60    addColors: (values, colors) ->\n   61:     itemColors = @generateUniqueColors(colors, values.length)\n   62      _.each values, (item) ->\n   63        item.color ?= itemColors.pop()\n   64  \n   65:   generateUniqueColors: (colors, size) ->\n   66      colors = _.shuffle(colors)\n   67      results = []\n\n2 matches in 1 file\n\n\nSearching 13 files for \"addColors\"\n\n/Users/Aram/Development/Urbanetic/vega-charts/src/charts/Chart.coffee:\n   18      delete args.element\n   19      @items = @generateItems(items)\n   20:     @addColors(@items, args.colors ? @DEFAULT_COLORS)\n   21  \n   22    render: (args) ->\n   ..\n   58    generateItems: (values) -> values\n   59  \n   60:   addColors: (values, colors) ->\n   61      itemColors = @generateUniqueColors(colors, values.length)\n   62      _.each values, (item) ->\n\n2 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 8986,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/charts/PieChart.coffee",
			"settings":
			{
				"buffer_size": 4045,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/charts/Chart.coffee",
			"settings":
			{
				"buffer_size": 3126,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Vega.coffee",
			"settings":
			{
				"buffer_size": 1120,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/chart.less",
			"settings":
			{
				"buffer_size": 751,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.js",
			"settings":
			{
				"buffer_size": 908,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/charts/LineChart.coffee",
			"settings":
			{
				"buffer_size": 3745,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/meteor/chart.coffee",
			"settings":
			{
				"buffer_size": 1004,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 400.0,
		"selected_items":
		[
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"enable lint",
				"SublimeLinter: Enable Linting"
			],
			[
				"linting",
				"SublimeLinter: Disable Linting"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"word",
				"WordHighlight: Toggle Enabled"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"linter",
				"SublimeLinter: Show All Errors"
			],
			[
				"todo",
				"TodoReview: Project and Open Files"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"list p",
				"Package Control: List Packages"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"xiki",
				"Create Xiki Buffer"
			]
		],
		"width": 475.0
	},
	"console":
	{
		"height": 133.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Aram/Development/Urbanetic/vega-charts",
		"/Users/Aram/Development/Urbanetic/vega-charts/src",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/charts",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/meteor"
	],
	"file_history":
	[
		"/Users/Aram/Development/Urbanetic/vega-charts/vega-charts.sublime-project",
		"/Users/Aram/Development/Urbanetic/vega-charts/.gitignore",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/meteor/chart.coffee",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/charts/PieChart.coffee",
		"/Users/Aram/Development/Urbanetic/vega-charts/package.js",
		"/Users/Aram/Development/Urbanetic/vega-charts/versions.json",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/charts/Chart.coffee",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/chart.less",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/meteor/lineChart.coffee",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/meteor/pieChart.coffee",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/Vega.coffee",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/charts/LineChart.coffee",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/meteor/pieChart.html",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/meteor/chart",
		"/Users/Aram/Development/Urbanetic/vega-charts/LICENSE",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/PieChart.coffee",
		"/Users/Aram/Development/Urbanetic/vega-charts/src/Chart.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/README.md",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/LICENSE",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/Entities.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/Scenarios.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/util/ParamUtils.coffee",
		"/Users/Aram/.meteor/packages/mongo/.1.0.11.fhyzd6++os+web.browser+web.cordova/os/packages/mongo.js",
		"/Users/Aram/.meteor/packages/mongo/.1.0.11.fhyzd6++os+web.browser+web.cordova/web.browser/packages/mongo.js",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/package.js",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/Projects.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/Layers.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/Typologies.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/ParamUtils.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/Reports.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/SchemaUtils.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/util",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/bismuth-schema/package.js",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/bismuth-schema.sublime-project",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/collections.coffee",
		"/private/var/folders/ys/88w0qp6x69v7h_4rg8_9w1jh0000gn/T/src_SchemaUtils_Before_f3ece5a6114c5d29937097a5e4ee3e5ed8155567.coffee",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/.gitignore",
		"/Users/Aram/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Aram/Development/Urbanetic/bismuth-schema/src/collectins.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/layouts/main.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/util/typology_generator.js",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/entityForm.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/entityForm.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/common/evaluationEngine.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/notFound/notFound.html",
		"/Users/Aram/Desktop/wkt",
		"/Users/Aram/Development/Urbanetic/aurin-esp/docs/walkthrough.md",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/importForm.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/importForm.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/elements/importField.less",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/elements/importField.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/elements/importField.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/docs/index.md",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/server/startup/loadUsers.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/resources/project.less",
		"/Users/Aram/Development/Urbanetic/aurin-esp/util/typology_param_extractor.js",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/server/publications.coffee",
		"/Users/Aram/Desktop/ESP/Multipolygon/AH_1St_1Bed_Basic_2Poly_Test/shp.shp",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/collections/typologies.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/reports/reportPanel.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/reports/reportPanel.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/.meteor/release",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/common/EntityUtils.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/typologyForm.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/typologyForm.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/states/design.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/Gruntfile.js",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/common/DeferredQueueMap.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/states/design.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/resources/layout.less",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/.meteor/packages",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/.bowerrc",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/main.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/config/app.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/reports/precinctReport.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/lotBulkForm.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/lotFilterForm.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/routes/routes.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/projectForm.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/modules/LotUtils.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/lotFilterForm.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/lotBulkForm.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/autoAllocationForm.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/modules/GeometryUtils.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/autoAllocationForm.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/states/projects.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/layouts/main.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/bower.json",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/lotForm.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/elements/legend.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/aurin-esp.sublime-project",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/common/AuthUtils.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/resources/design.less",
		"/Users/Aram/Development/Urbanetic/aurin-esp/docs/analysis.md",
		"/Users/Aram/Development/Urbanetic/aurin-esp/docs/features.md",
		"/Users/Aram/Development/Urbanetic/atlas-unity-demo/atlas-unity/lib/utility/src/Log.js",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/lotForm.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/forms/projectForm.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/collections/SchemaUtils.coffee",
		"/Users/Aram/Development/Web/crayon/wp-content/plugins/crayon-syntax-highlighter/crayon_settings_wp.class.php",
		"/Users/Aram/Development/Web/crayon/wp-content/plugins/crayon-syntax-highlighter/css/src/admin_style.css",
		"/Users/Aram/Development/Web/crayon/wp-content/plugins/crayon-syntax-highlighter/readme.txt",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/elements/afFieldLabel.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/resources/report.less",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/reports/reports.coffee",
		"/Users/Aram/Development/Web/crayon/wp-content/plugins/crayon-syntax-highlighter/css/src/crayon_style.css",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/server/projects.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/elements/azimuthArray.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/server/startup/migrations.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/server/buffers.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/reports/openSpaceReport.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/reports/openSpaceReport.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/.meteor/platforms",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/collections/ParamUtils.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/elements/GeometryImportFields.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/resources/asset.less",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/.meteor/cordova-plugins",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/common/DeferredQueue.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/tests/common/projects.js",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/reports/precinctReport.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/common/ProjectUtils.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/states/projects.html",
		"/Users/Aram/Desktop/alloca",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/elements/azimuthArray.html",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/private/users.json",
		"/Users/Aram/Development/Urbanetic/aurin-esp/app/common/poll.coffee",
		"/Users/Aram/Development/Urbanetic/aurin-esp/docs/developers.md",
		"/Users/Aram/Development/Urbanetic/aurin-esp/docs/css/override.css"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 112.0,
		"where_history":
		[
			"",
			"/Users/Aram/Development/Urbanetic/aurin-esp/app/client/views/reports",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"&",
			"hasColorScale",
			"colorData",
			"'values'",
			"seriesMap",
			"addColors",
			"generateUniqueColors",
			"seriesMap",
			"color",
			"colors",
			"color",
			"MAX_LABEL_CHARS",
			"AXIS_PADDING",
			"CHAR_PIXEL_WIDTH",
			"generateItems",
			"yvalue",
			"em",
			"container",
			"$el",
			"option",
			"options",
			"args",
			"generateSpec:",
			"options",
			"chart",
			"radius",
			"super",
			"width",
			"generateSpec:",
			"width:",
			"widht:",
			"{top: 0, bottom: left:",
			"render:",
			".formatter",
			"item",
			"new chart",
			"resize",
			"400",
			"chart",
			"resize",
			"labels",
			"[",
			"createPopupElement",
			"[",
			"'[",
			"'['",
			"vegaDf",
			"['",
			"render",
			"paddingForbody",
			"data.",
			"stocks",
			"# Collapse the chart if there're no values to show.",
			"addColors",
			"paddingForbody",
			"addColors",
			"vegaOptions",
			"width",
			"pie",
			"types",
			"items",
			"typologies",
			"typoligies",
			"Depends.",
			"Depends.define",
			".coffee",
			"src/",
			"Collections.ready",
			"ParametersSchema",
			".ParametersSchema",
			"ParametersSchema",
			") =>",
			"ParametersSchema",
			"project",
			"TypologySchema",
			"Projects",
			"parametersSchemaField",
			"ParametersSchema",
			"Units",
			"Typologies",
			"Projects",
			"global",
			"@",
			"units",
			"EntityParametersSchema",
			"TypologiesParametersSchema",
			"@",
			".log",
			"new meteor.collection",
			"'scenarios'",
			"_driver",
			"open",
			"Projects",
			"projects",
			"Entities",
			"entities",
			"SchemaUtils",
			"entities",
			"Typologies",
			"ParametersSchema",
			"parametersSchema",
			"units",
			"'Units'",
			"SchemaUtils",
			"createCategoriesSchema",
			"depends.add",
			"global",
			"paramu",
			"param",
			"units",
			"ProjectSchema",
			"ProjectParametersSchema",
			"areaSchema",
			"calcLength",
			"calcArea",
			": elevationSchema",
			": heightSchema",
			": projectSchema",
			"projectSchema",
			": descSchema",
			"descSchema",
			"createCategorySchemaObj",
			"descSchema",
			"mergeDefaultsWithTemplate",
			"forEachCategoriesField",
			"createCategoriesSchema",
			"createCategoriesSchemaFields",
			"mergeDefaultsWithTemplate"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"values",
			"",
			"EntityParametersSchema",
			": SchemaUtils.elevationSchema()",
			": SchemaUtils.heightSchema()",
			": SchemaUtils.projectSchema()",
			": SchemaUtils.descSchema()",
			"",
			"TemplateClass",
			"$fpaMin",
			"$fpaMax",
			"getFpaMinInput",
			"getFpaMaxInput",
			"fpaMin",
			"fpaMax",
			"fpaMin",
			"fpaMax",
			"fpaMin",
			"fpaMax",
			"fpaMin",
			"fpa_max",
			"fpa_min",
			"fpa_min\nfpa_min",
			"limit",
			"indexByArea",
			"multiSelect",
			"Template.reportPanel",
			"TemplateClass",
			"",
			"Entities.getTypologyClass(@model)",
			"download icon",
			".header",
			"classes: extendBuildingClasses()",
			"classes: extendLandClasses",
			"CommercialBuildTypes",
			"TransportParameters",
			"OPEN_SPACE: {defaultValue: 0}",
			"OPEN_SPACE: {defaultValue",
			"buildTypes",
			"build_type",
			"buildType",
			"\"}}",
			"",
			"Templates.getElement",
			"fieldSchema",
			"Templates",
			"financial.residential",
			"MJ_TO_KWH",
			"KWH_TO_MJ",
			"KW_TO_MJ",
			"*",
			"",
			"', ",
			"'",
			", ",
			"",
			"ve_lanes",
			" * ",
			"",
			"param('",
			"',",
			"'",
			"BicyclePathMaterialTypes",
			" * ",
			"",
			"-",
			"PATHWAY",
			"Units.m2",
			"PATHWAY",
			"Units.spaces",
			"Units.Spaces",
			"SchemaUtils.getParameterValue(",
			"SchemaUtils.setParameterValue(",
			"SchemaUtils.getParameterValue(",
			"getVisibility",
			"_id",
			"TypologyBuildQualities",
			"",
			"path",
			"0},\\n",
			",\\n",
			"template.$",
			"&deg;",
			"fromString",
			"->",
			"\"",
			"label:",
			"CustomersCsvTransformer",
			"_getCsvHeaders",
			",",
			"\"",
			"getFixtureCsv",
			"getFixtureJson",
			"hasNonEmptySubValue",
			"setFieldValue",
			"_addSubFields",
			"reSubFieldParts",
			"subHeader",
			"subheader",
			"\"",
			"createHandler",
			"'}",
			"{param: '",
			"",
			"\"}}",
			"{{> afQuickField name=\"parameters.",
			" * ",
			"Units.m2",
			"],",
			"[",
			"\\n",
			"],",
			"[",
			"\\n",
			"avowzone",
			"",
			"./src/",
			"  ",
			"/",
			"",
			"~",
			"",
			"\\n",
			"",
			"\\n",
			"",
			"loginUrl",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/meteor/chart.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 113,
						"regions":
						{
						},
						"selection":
						[
							[
								113,
								113
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8986,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										255,
										261
									],
									[
										282,
										288
									],
									[
										529,
										535
									],
									[
										679,
										685
									],
									[
										987,
										993
									],
									[
										1161,
										1167
									],
									[
										1457,
										1460
									],
									[
										1482,
										1485
									],
									[
										1702,
										1705
									],
									[
										1727,
										1730
									],
									[
										1942,
										1945
									],
									[
										1967,
										1970
									],
									[
										2312,
										2318
									],
									[
										2339,
										2345
									],
									[
										2586,
										2592
									],
									[
										2736,
										2742
									],
									[
										3044,
										3050
									],
									[
										3068,
										3074
									],
									[
										3213,
										3219
									],
									[
										3538,
										3547
									],
									[
										3852,
										3862
									],
									[
										4211,
										4218
									],
									[
										4451,
										4458
									],
									[
										4703,
										4710
									],
									[
										5046,
										5068
									],
									[
										5505,
										5511
									],
									[
										5637,
										5643
									],
									[
										5857,
										5863
									],
									[
										6000,
										6006
									],
									[
										6232,
										6238
									],
									[
										6448,
										6454
									],
									[
										6643,
										6649
									],
									[
										7054,
										7067
									],
									[
										7254,
										7267
									],
									[
										7489,
										7502
									],
									[
										7837,
										7840
									],
									[
										7939,
										7942
									],
									[
										8221,
										8241
									],
									[
										8362,
										8382
									],
									[
										8679,
										8688
									],
									[
										8829,
										8838
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								8684,
								8684
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 13,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4110.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/charts/PieChart.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4045,
						"regions":
						{
						},
						"selection":
						[
							[
								3670,
								3670
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/charts/Chart.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3126,
						"regions":
						{
						},
						"selection":
						[
							[
								82,
								82
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Vega.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1120,
						"regions":
						{
						},
						"selection":
						[
							[
								1120,
								1120
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/chart.less",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 751,
						"regions":
						{
							"gutter_color_167":
							{
								"flags": 144,
								"icon": "Cache/GutterColor/rgba(0, 0, 0, 0.1).png",
								"regions":
								[
									[
										167,
										210
									]
								],
								"scope": "gutter_color"
							},
							"gutter_color_211":
							{
								"flags": 144,
								"icon": "Cache/GutterColor/#ddd.png",
								"regions":
								[
									[
										211,
										236
									]
								],
								"scope": "gutter_color"
							},
							"gutter_color_650":
							{
								"flags": 144,
								"icon": "Cache/GutterColor/#999.png",
								"regions":
								[
									[
										650,
										666
									]
								],
								"scope": "gutter_color"
							}
						},
						"selection":
						[
							[
								166,
								166
							]
						],
						"settings":
						{
							"syntax": "Packages/LESS/LESS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "package.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 908,
						"regions":
						{
						},
						"selection":
						[
							[
								908,
								908
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "src/charts/Chart.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3126,
						"regions":
						{
						},
						"selection":
						[
							[
								134,
								134
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/charts/LineChart.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3745,
						"regions":
						{
						},
						"selection":
						[
							[
								241,
								241
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/meteor/chart.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1004,
						"regions":
						{
						},
						"selection":
						[
							[
								382,
								382
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "vega-charts.sublime-project",
	"replace":
	{
		"height": 76.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"chart",
				"src/meteor/chart.coffee"
			],
			[
				"cahrt.c",
				"src/charts/Chart.coffee"
			],
			[
				"picahr",
				"src/charts/PieChart.coffee"
			],
			[
				"piecha",
				"src/charts/PieChart.coffee"
			],
			[
				"vega",
				"src/Vega.coffee"
			],
			[
				"charrt",
				"src/charts/Chart.coffee"
			],
			[
				"picha",
				"src/charts/PieChart.coffee"
			],
			[
				"cahrt.co",
				"src/meteor/chart.coffee"
			],
			[
				"linec",
				"src/charts/LineChart.coffee"
			],
			[
				"pack",
				"package.js"
			],
			[
				"linechar",
				"src/meteor/lineChart.coffee"
			],
			[
				"piec",
				"src/charts/PieChart.coffee"
			],
			[
				"linechart",
				"src/charts/LineChart.coffee"
			],
			[
				"charts",
				"vega-charts.sublime-project"
			],
			[
				"piechart",
				"src/charts/PieChart.coffee"
			],
			[
				"piechaet",
				"src/charts/PieChart.coffee"
			],
			[
				"piechar",
				"src/charts/PieChart.coffee"
			],
			[
				"piecahr",
				"src/meteor/pieChart.coffee"
			],
			[
				"linchart",
				"src/meteor/lineChart.coffee"
			],
			[
				"pie",
				"src/charts/PieChart.coffee"
			],
			[
				"poie",
				"src/meteor/pieChart.coffee"
			],
			[
				"less",
				"src/chart.less"
			],
			[
				"ent",
				"src/Entities.coffee"
			],
			[
				"entit",
				"src/Entities.coffee"
			],
			[
				"projec",
				"src/Projects.coffee"
			],
			[
				"or",
				"src/Reports.coffee"
			],
			[
				"scea",
				"src/Scenarios.coffee"
			],
			[
				"para",
				"src/util/ParamUtils.coffee"
			],
			[
				"reports",
				"src/Reports.coffee"
			],
			[
				"paramutils",
				"src/util/ParamUtils.coffee"
			],
			[
				"layers",
				"src/Layers.coffee"
			],
			[
				"entities",
				"src/Entities.coffee"
			],
			[
				"entityschema",
				"src/schemas/EntitySchema.coffee"
			],
			[
				"typologyschema",
				"src/schemas/TypologySchema.coffee"
			],
			[
				"prj",
				"src/Projects.coffee"
			],
			[
				"typ",
				"src/Typologies.coffee"
			],
			[
				"schemautils",
				"src/util/SchemaUtils.coffee"
			],
			[
				"entsch",
				"src/schemas/EntitySchema.coffee"
			],
			[
				"typologysc",
				"src/schemas/TypologySchema.coffee"
			],
			[
				"typo",
				"src/Typologies.coffee"
			],
			[
				"schemauto",
				"src/util/SchemaUtils.coffee"
			],
			[
				"projcets",
				"src/Projects.coffee"
			],
			[
				"unt",
				"src/Units.coffee"
			],
			[
				"scena",
				"src/Scenarios.coffee"
			],
			[
				"paramut",
				"src/util/ParamUtils.coffee"
			],
			[
				"sche",
				"src/util/SchemaUtils.coffee"
			],
			[
				"layer",
				"src/Layers.coffee"
			],
			[
				"pak",
				"package.js"
			],
			[
				"entity",
				"src/fields/EntitySchema.coffee"
			],
			[
				"schemaut",
				"src/util/SchemaUtils.coffee"
			],
			[
				"typologies",
				"src/Typologies.coffee"
			],
			[
				"pacl",
				"src/util/ParamUtils.coffee"
			],
			[
				"pac",
				"package.js"
			],
			[
				"p",
				"package.js"
			],
			[
				"scenarios",
				"src/Scenarios.coffee"
			],
			[
				"project",
				"src/Projects.coffee"
			],
			[
				"sce",
				"src/Scenarios.coffee"
			],
			[
				"projects",
				"src/Projects.coffee"
			],
			[
				"typolo",
				"src/Typologies.coffee"
			],
			[
				"units",
				"src/Units.coffee"
			],
			[
				"schema",
				"src/SchemaUtils.coffee"
			],
			[
				"colo",
				"src/Typologies.coffee"
			],
			[
				"parmu",
				"src/ParamUtils.coffee"
			],
			[
				"shcem",
				"src/SchemaUtils.coffee"
			],
			[
				"coll",
				"src/collections.coffee"
			],
			[
				"util",
				"src/SchemaUtils.coffee"
			],
			[
				"collec",
				"src/collections.coffee"
			],
			[
				"colelc",
				"src/collections.coffee"
			],
			[
				"col",
				"src/collections.coffee"
			],
			[
				"migrat",
				"app/server/startup/migrations.coffee"
			],
			[
				"typologform",
				"app/client/views/forms/typologyForm.html"
			],
			[
				"entityform",
				"app/client/views/forms/entityForm.html"
			],
			[
				"typologi",
				"app/collections/typologies.coffee"
			],
			[
				"version",
				"app/.meteor/versions"
			],
			[
				"entuit",
				"app/common/EntityUtils.coffee"
			],
			[
				"import",
				"app/client/views/elements/GeometryImportFields.coffee"
			],
			[
				"reportpan",
				"app/client/views/reports/reportPanel.coffee"
			],
			[
				"eval",
				"app/common/evaluationEngine.coffee"
			],
			[
				"entut",
				"app/common/EntityUtils.coffee"
			],
			[
				"lya",
				"app/client/resources/layout.less"
			],
			[
				"typol",
				"app/collections/typologies.coffee"
			],
			[
				"typform",
				"app/client/views/forms/typologyForm.coffee"
			],
			[
				"main",
				"app/client/views/layouts/main.html"
			],
			[
				"main.html",
				"app/client/views/layouts/main.html"
			],
			[
				"app",
				"app/client/config/app.coffee"
			],
			[
				"desing",
				"app/client/views/states/design.html"
			],
			[
				"layt",
				"app/client/resources/layout.less"
			],
			[
				"gruntfi",
				"Gruntfile.js"
			],
			[
				"dsign",
				"app/client/views/states/design.coffee"
			],
			[
				"deferredqueuemap",
				"app/common/DeferredQueueMap.coffee"
			],
			[
				"ntutil",
				"app/client/modules/LotUtils.coffee"
			],
			[
				"design",
				"app/client/views/states/design.coffee"
			],
			[
				"gruntfil",
				"Gruntfile.js"
			],
			[
				"projectform",
				"app/client/views/forms/projectForm.html"
			],
			[
				"main.cof",
				"app/client/views/layouts/main.coffee"
			],
			[
				"deisgn",
				"app/client/views/states/design.html"
			],
			[
				"projform",
				"app/client/views/forms/projectForm.coffee"
			],
			[
				"projecform",
				"app/client/views/forms/projectForm.coffee"
			],
			[
				"bulk",
				"app/client/views/forms/lotBulkForm.coffee"
			],
			[
				"lotform",
				"app/client/views/forms/lotForm.coffee"
			],
			[
				"bulkform",
				"app/client/views/forms/lotBulkForm.html"
			],
			[
				"otform",
				"app/client/views/forms/lotForm.html"
			],
			[
				"lotbu",
				"app/client/views/forms/lotBulkForm.coffee"
			],
			[
				"lotbulkform",
				"app/client/views/forms/lotBulkForm.coffee"
			],
			[
				"projectfor",
				"app/client/views/forms/projectForm.coffee"
			],
			[
				"lotbulk",
				"app/client/views/forms/lotBulkForm.html"
			],
			[
				"lotfilr",
				"app/client/views/forms/lotFilterForm.html"
			],
			[
				"lotfilter",
				"app/client/views/forms/lotFilterForm.coffee"
			],
			[
				"lay",
				"app/client/resources/layout.less"
			],
			[
				"autoal",
				"app/client/views/forms/autoAllocationForm.html"
			],
			[
				"scheut",
				"app/collections/SchemaUtils.coffee"
			],
			[
				"parmat",
				"app/collections/ParamUtils.coffee"
			],
			[
				"lotutil",
				"app/client/modules/LotUtils.coffee"
			],
			[
				"lotfilterfo",
				"app/client/views/forms/lotFilterForm.html"
			],
			[
				"filter",
				"app/client/views/forms/lotFilterForm.html"
			],
			[
				"typology",
				"util/typology_generator.js"
			],
			[
				"autoall",
				"app/client/views/forms/autoAllocationForm.coffee"
			],
			[
				"autoallo",
				"app/client/views/forms/autoAllocationForm.coffee"
			],
			[
				"autoalo",
				"app/client/views/forms/autoAllocationForm.coffee"
			],
			[
				"lotfile",
				"app/client/views/forms/lotFilterForm.coffee"
			],
			[
				"autall",
				"app/client/views/forms/autoAllocationForm.html"
			],
			[
				"ty",
				"app/collections/typologies.coffee"
			],
			[
				"lotu",
				"app/client/modules/LotUtils.coffee"
			],
			[
				"lotfilterform",
				"app/client/views/forms/lotFilterForm.html"
			],
			[
				"lotut",
				"app/client/modules/LotUtils.coffee"
			],
			[
				"filterofm",
				"app/client/views/forms/lotFilterForm.html"
			],
			[
				"desgn",
				"app/client/views/states/design.coffee"
			],
			[
				"lotilterform",
				"app/client/views/forms/lotFilterForm.coffee"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 37.0,
		"selected_items":
		[
			[
				"pin",
				"no-padding"
			],
			[
				"downloadin",
				"Files.downloadInBrowser"
			],
			[
				"fromstring",
				"fromString"
			],
			[
				"getaddres",
				"getAddress"
			]
		],
		"width": 400.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 261.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
